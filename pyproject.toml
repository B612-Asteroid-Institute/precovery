[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "precovery"
requires-python = ">=3.11"
dynamic = ["version"]
authors = [
    { name = "Kathleen Kiker", email = "kathleen@b612foundation.org" },
    { name = "Alec Koumjian", email = "alec@b612foundation.org" },
    { name = "Joachim Moeyens", email = "moeyensj@uw.edu" },
    { name = "Spencer Nelson", email = "spencer@b612foundation.org" },
    { name = "Nate Tellis", email = "nate@b612foundation.org" },
]
description = "Fast asteroid precovery at scale"
readme = "README.md"
license = { file = "LICENSE.md"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy",
    "numba",
    "jaxlib",
    "jax",
    "sqlalchemy",
    "regex",
    "pandas",
    "healpy",
    "requests",
    "adam-core>=0.2.5",
]
[dependency-groups]
test = [
    "adam_assist",
    "pytest",
    "black",
    "isort",
    "mypy",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-doctestplus",
    "ruff",
    "astroquery",
    "pytest-mock>=3.14.0",
]

[project.urls]
"Homepage" = "https://github.com/b612-asteroid-institute/precovery"

[project.scripts]
precovery-index = "precovery.ingest:index"

[tool.pdm.version]
source = "scm"
write_to = "precovery/_version.py"
write_template = '__version__ = "{}"'

[tool.pytest.ini_options]
python_functions = "test_*"

[tool.pdm.scripts]
check = { composite = ["lint", "typecheck"] }
format = { composite = ["black ./precovery", "isort ./precovery"] }
lint = { composite = [
  "ruff check ./precovery",
  "black --check ./precovery",
  "isort --check-only ./precovery",
] }
fix = "ruff ./precovery --fix"
typecheck = "mypy ./precovery"

test = "pytest --benchmark-skip {args}"
doctest = "pytest --doctest-plus --doctest-only"
benchmark = "pytest --benchmark-only --benchmark-cprofile=cumtime"
coverage = "pytest --cov=precovery --cov-report=xml"

[tool.pdm]
distribution = true

[tool.black]
line-length = 88

[tool.flake8]
line-length = 88

[tool.isort]
profile = "black"
[tool.mypy]
exclude = "virtualenv*"
plugins = ["numpy.typing.mypy_plugin", "sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "numba"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "healpy"
ignore_missing_imports = true

[tool.pytest]
filterwarnings = "ignore::DeprecationWarning:astropy"

[tool.ruff]
line-length = 110
target-version = "py311"
lint.ignore = []
exclude = ["build"]
