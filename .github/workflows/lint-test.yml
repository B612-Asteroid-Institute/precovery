name: Lint and Test

on:
  push:
    branches: [ main, "v*"]
  pull_request:
    branches: [ main, "v*"]

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Get git tags
        run:  git fetch --prune --unshallow --tags

      # Use pip to install dependencies
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: ./pyproject.toml
      - name: Install dependencies
        run: |
          pdm install -G test
      - name: Run linter
        run: |
          pdm run check
      # Run tests
      - name: Run tests
        run: |
          pdm run coverage
      - name: Coveralls
        uses: coverallsapp/github-action@v2.0.0
        with:
          path-to-lcov: coverage.xml

      # Run benchmarks
      - name: Run benchmarks
        run: |
          pdm run benchmark --benchmark-json bench.json

      # Store benchmark results as a GitHub commit comment
      - name: Store main benchmark result
        if: github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark
          tool: 'pytest'
          output-file-path: bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Store benchmarks on gh-pages branch
          gh-pages-branch: gh-pages

      # For PRs, the benchmark comparison will automatically happen
      # since we're now storing benchmarks on the gh-pages branch
      - name: Compare benchmarks
        if: github.event_name == 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark
          tool: 'pytest'
          output-file-path: bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-always: true
          fail-threshold: '150%'
          auto-push: false
